name: MADE Project Test Automation
run-name: Running project unit and integration tests! # ${{ github.actor }} 
on:
  push:
    branches:
      - main
    paths:
      - project/**
      - .github/workflows/project*

jobs:
  Project-Test-Run:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}

      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "Initiating code testing for repository."
      - name: List files in the repository
        run: ls ${{ github.workspace }}
      - run: echo " This job's status is ${{ job.status }}."

      # Install python
      - run: echo "Installing Python3 in runner."
      - name: Set up Python 3.7.6
        uses: actions/setup-python@v5
        with:
          python-version: "3.7.6"

      - run: echo "Setting up kaggle api credentials to pull data from kaggle"
      - name: Set up Kaggle credentials
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"${KAGGLE_USERNAME}\",\"key\":\"${KAGGLE_KEY}\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json
          echo "Kaggle credentials have been set."
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

      - run: echo "Installing Project dependencies with pip."
      - name: Install Dependencies
        run: pip install -r ./project/requirements.txt

      - run: echo "Setting execute permission on tests.sh file to run test cases."
      - name: Set Execute Permission for tests.sh
        run: chmod +x ./project/tests.sh

      - run: echo "Executing tests.sh script to run test cases."
      - name: Project Test
        id: project_test
        run: ./tests.sh
        working-directory: ./project
      - run: echo "Testing completed."
